name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:
  load-env:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.0

      - name: List files in the root directory
        run: |
          ls -la

  deps:
    runs-on: ubuntu-latest
    needs: load-env

    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"
          npm install

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ hashFiles('package-lock.json') }}


  unit-tests:
    runs-on: ubuntu-latest
    needs: [load-env,deps]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.0

      - name: Restore node modules from cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ hashFiles('package-lock.json') }}

      - name: Run unit tests
        run: npm run test:unit

  prisma-migrations:
    runs-on: ubuntu-latest
    needs: [deps, unit-tests]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5433
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.0

      - name: Restore node modules from cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ hashFiles('package-lock.json') }}

      - name: Run prisma migrations
        run: |
         npm run prisma:gen
  build:
    runs-on: ubuntu-latest
    needs: [prisma-migrations, deps]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >-
          --health-cmd "pg_isready -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.0

      - name: Restore node modules from cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ hashFiles('package-lock.json') }}

      - name: Run prisma migrations
        run: npx prisma migrate dev --name init

      - name: Run build project
        run: npm run build
