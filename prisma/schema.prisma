// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid                String       @id @default(uuid())
  username            String       @unique
  firstName           String
  lastName            String
  password            String
  age                 Int
  todos               Todo[]
  viewedTodos         TodoViewer[]
  Session             Session[]
  markedForDeletionAt DateTime?
}

model Todo {
  id          String       @id @default(uuid())
  name        String
  description String
  createdAt   DateTime     @default(now())
  creator     User         @relation(references: [uuid], fields: [user_uuid], onDelete: Cascade)
  user_uuid   String
  viewers     TodoViewer[]
}

model TodoViewer {
  todoId String
  todo   Todo   @relation(fields: [todoId], references: [id])
  userId String
  user   User   @relation(fields: [userId], references: [uuid])

  @@id([todoId, userId])
}

model Session {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  deviceId   String
  deviceType String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [uuid], onDelete: Cascade)
  userId     String
}
